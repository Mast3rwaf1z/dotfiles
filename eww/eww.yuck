

; TOP BAR
; ######################################################### ;

(defwidget time []
  (box :class "time" :halign "end"
    (button :onclick "notify-send \"$(date)\"" date)))
(defpoll date :interval "1s" "date '+%H:%M:%S'")

(defwidget battery []
  (box :class "battery" :halign "end" poll_battery)
)
(defpoll poll_battery :interval "10s" "python scripts/battery.py")

(defwidget networking []
  (box :class "networking" :halign "end" poll_network)
)
(defpoll poll_network :interval "10s" "python scripts/networking.py")

(defwidget memory []
  (box :class "memory" :halign "end" poll_memory)
)
(defpoll poll_memory :interval "1s" "python scripts/memory.py")

(defwidget cpu []
  (box :class "cpu" :halign "end" poll_cpu)
)
(defpoll poll_cpu :interval "1s" "python scripts/cpu.py")

(defwidget gpu []
  (box :class "gpu" :halign "end" poll_gpu)
)
(defpoll poll_gpu :interval "1s" "python scripts/gpu.py")

(defwidget right []
  (box :class "monitor" :halign "end" :space-evenly "false" :spacing "20"
    (box :class "seperator" "")
    (gpu)
    (box :class "seperator" "")
    (cpu)
    (box :class "seperator" "")
    (memory)
    (box :class "seperator" "")
    (networking)
    (box :class "seperator" "")
    (battery)
    (box :class "seperator" "")
    (time))
)

(defwidget workspaces []
  (literal :content workspace))
(deflisten workspace "scripts/workspace.sh")

(defwidget resize []
  (literal :content resizer))
(deflisten resizer "scripts/resize.sh")

(defpoll poll_resizer :interval "1s" "scripts/resize.sh")

(defwidget left []
  (box :class "left" :halign "start" :space-evenly "false"
    (workspaces)
    (resize)
  )
)


(defwidget bar []
  (box :class "dock"
  (left)
  (right))
)

(defwindow dock
  :monitor 0
  :geometry (
    geometry 
      :x "0%"
      :y "0.5%"
      :width "99.4%"
      :height "2%"
      :anchor "top center"
  )
  :stacking "fg"
  :exclusive true
  :windowtype "dock"
  :wm-ignore true
  (bar))

; Application launcher
; ################################################### ;
(defwidget launcher_top_bar []
  (box :valign "start" :halign "end" :class "launcher_top_bar" :orientation "h" :hexpand true :width "400"
    (button :class "launcher_button" :onclick "eww close launcher" "X")
  )
)

(defwidget launcher_contents []
  (literal :content launcher_content)
)
(deflisten launcher_content "python scripts/launcher.py")

(defwidget launcher_content_scroll []
  (scroll :vscroll true
      (launcher_contents)
  )
)

(defwidget launcher []
  (box :width "400" :height "500" :orientation "v"
  (launcher_top_bar)
  (launcher_content_scroll)
  ))

(defwindow launcher
  :class "launcher"
  :monitor 0
  :geometry (
    geometry
      :x "40%"
      :y "30%"
  )
  :stacking "fg"
  :wm-ignore true
(launcher))